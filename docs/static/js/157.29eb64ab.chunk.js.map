{"version":3,"file":"static/js/157.29eb64ab.chunk.js","mappings":"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","sources":["pages/groceryList/constant.js","pages/groceryList/drawer.js","pages/groceryList/index.js"],"sourcesContent":["export const groceryList = [\r\n  {\r\n    id: \"0\",\r\n    title: \"Steak\",\r\n    done: false,\r\n    added: true,\r\n  },\r\n  {\r\n    id: \"1\",\r\n    title: \"Abalone\",\r\n    done: false,\r\n    added: true,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Beef brisket $25.13\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Beef tendon\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: \"White carrot radish\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    title: \"Red wine\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    title: \"Sweet potato good for eyes\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    title: \"Black beans canned\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    title: \"Broccoli (cholesterol, cancer)\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    title: \"Egg plant\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    title: \"Beets\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    title: \"Dragon fruit\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    title: \"Salmon wild caught fish\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    title: \"Avocado\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    title: \"Corn\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    title: \"Saba\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    title: \"Banana\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    title: \"Ginger\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    title: \"Cauliflower\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n\r\n\r\n];\r\n","import Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { green, red } from \"@mui/material/colors\";\r\nimport {\r\n  Checkbox,\r\n  Container,\r\n  Fab,\r\n  Stack,\r\n  SwipeableDrawer,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport default function GroceryDrawer({\r\n  savedList,\r\n  handleDelete,\r\n  handleAdd,\r\n  handleCheck,\r\n}) {\r\n  const inputRef = useRef();\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"secondary\"\r\n        aria-label=\"edit\"\r\n        sx={{ position: \"fixed\", bottom: 30, right: 30 }}\r\n        onClick={handleClickOpen}\r\n      >\r\n        <EditIcon />\r\n      </Fab>\r\n\r\n      <SwipeableDrawer\r\n        anchor=\"right\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        onOpen={handleClickOpen}\r\n        sx={{\r\n          '& .MuiDrawer-paperAnchorRight': {\r\n            maxWidth: '80%'\r\n          }\r\n        }}\r\n      >\r\n        <Container>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            sx={{\r\n              width: \"100%\",\r\n              pt: 3,\r\n              position: \"sticky\",\r\n              top: 0,\r\n              backgroundColor: \"white\",\r\n              zIndex: 1,\r\n            }}\r\n          >\r\n            <TextField\r\n              inputRef={inputRef}\r\n              label=\"Add Item\"\r\n              sx={{ flexGrow: 1 }}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleAdd(e.target.value);\r\n                  e.target.value = \"\";\r\n                }\r\n              }}\r\n            />\r\n            <Avatar\r\n              sx={{ bgcolor: green[100], color: green[600], ml: 1 }}\r\n              onClick={() => {\r\n                handleAdd(inputRef.current.value);\r\n                inputRef.current.value = \"\";\r\n              }}\r\n            >\r\n              <AddIcon />\r\n            </Avatar>\r\n          </Stack>\r\n\r\n          <List sx={{ pt: 0 }}>\r\n            {savedList.map(({ id, title, added }) => (\r\n              <ListItem disableGutters key={id}>\r\n                <ListItemButton sx={{ px: 0 }} onClick={() => handleCheck(id)}>\r\n                  <ListItemAvatar>\r\n                    <Checkbox\r\n                      size=\"large\"\r\n                      sx={{ pl: 0 }}\r\n                      checked={added === true}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={title} />\r\n                  <DeleteIcon\r\n                    sx={{ color: red[600] }}\r\n                    fontSize=\"large\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDelete(id);\r\n                    }}\r\n                  />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Container>\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GroceryDialog from \"./dialog\";\r\nimport { groceryList } from \"./constant\";\r\nimport { blue, green, orange, purple } from \"@mui/material/colors\";\r\nimport GroceryDrawer from \"./drawer\";\r\n\r\nconst lsKey = \"groceryList\";\r\n\r\nexport default function GroceryList() {\r\n  const [savedList, setSavedList] = useState(() => {\r\n    if (lsKey in localStorage) {\r\n      return JSON.parse(localStorage[lsKey]);\r\n    }\r\n    return groceryList;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(lsKey, JSON.stringify(savedList));\r\n  }, [savedList]);\r\n\r\n  const handleDoneCheck = (e, val) => {\r\n    const idx = savedList.findIndex(({ id }) => id === e.target.name);\r\n    let tempList = [...savedList];\r\n\r\n    // Set the checked value\r\n    tempList[idx].done = val;\r\n\r\n    // Reorder it, but first make a copy and remove it\r\n    // const tempItem = { ...tempList[idx] };\r\n    // tempList = tempList.filter(({ id }) => id !== tempItem.id);\r\n\r\n    // // if checked, move it to the bottom of the list\r\n    // if (val === true) {\r\n    //   tempList = [...tempList, tempItem];\r\n    // }\r\n\r\n    // // If unchecked move it to the top of the list\r\n    // else {\r\n    //   tempList = [tempItem, ...tempList];\r\n    // }\r\n\r\n    // Save it\r\n    setSavedList(tempList);\r\n  };\r\n\r\n  const handleAddedCheck = (id) => {\r\n    const idx = savedList.findIndex((i) => i.id === id);\r\n    let tempList = [...savedList];\r\n\r\n    // Invert the checked value\r\n    tempList[idx].added = !tempList[idx].added;\r\n\r\n    // Save it\r\n    setSavedList(tempList);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const idx = savedList.findIndex((i) => i.id === id);\r\n    let tempList = [...savedList];\r\n    tempList.splice(idx, 1);\r\n\r\n    // Save it\r\n    setSavedList(tempList);\r\n  };\r\n\r\n  const handleAdd = (title) => {\r\n    // Prepend to start\r\n    setSavedList([\r\n      { id: Date.now().toString(), title, done: false, added: false },\r\n      ...savedList,\r\n    ]);\r\n  };\r\n\r\n  const ItemLine = ({ item: { id, title, done } }) => {\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            name={id}\r\n            size=\"large\"\r\n            checked={done}\r\n            onChange={handleDoneCheck}\r\n          />\r\n        }\r\n        label={\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={done ? { textDecoration: \"line-through\" } : {}}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ pt: 5 }}>\r\n      {savedList.filter(({ added, done }) => added === true && done !== true)\r\n        .length > 0 && (\r\n        <>\r\n          <Typography variant=\"h3\" sx={{ mb: 3, color: purple[700] }}>\r\n            Grocery List\r\n          </Typography>\r\n          <Stack direction=\"column\" spacing={2} sx={{ mb: 4 }}>\r\n            <FormGroup>\r\n              {savedList\r\n                .filter(({ added, done }) => added === true && done !== true)\r\n                .map((item) => (\r\n                  <ItemLine item={item} key={item.id} />\r\n                ))}\r\n            </FormGroup>\r\n          </Stack>\r\n        </>\r\n      )}\r\n\r\n      {savedList.filter(({ added, done }) => added === true && done === true)\r\n        .length > 0 && (\r\n        <>\r\n          <Typography variant=\"h3\" sx={{ mb: 3, color: green[600] }}>\r\n            {savedList.filter(\r\n              ({ added, done }) => added === true && done !== true\r\n            ).length > 0\r\n              ? \"Done\"\r\n              : \"Time to Checkout!\"}\r\n          </Typography>\r\n          <Stack direction=\"column\" spacing={2}>\r\n            <FormGroup>\r\n              {savedList\r\n                .filter(({ added, done }) => added === true && done === true)\r\n                .map((item) => (\r\n                  <ItemLine item={item} key={item.id} />\r\n                ))}\r\n            </FormGroup>\r\n          </Stack>\r\n        </>\r\n      )}\r\n\r\n      <GroceryDrawer\r\n        savedList={savedList}\r\n        handleDelete={handleDelete}\r\n        handleAdd={handleAdd}\r\n        handleCheck={handleAddedCheck}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["groceryList","id","title","done","added","GroceryDrawer","_ref","savedList","handleDelete","handleAdd","handleCheck","inputRef","useRef","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClickOpen","_jsxs","children","_jsx","Fab","color","sx","position","bottom","right","onClick","EditIcon","SwipeableDrawer","anchor","onClose","onOpen","maxWidth","Container","Stack","direction","alignItems","justifyContent","width","pt","top","backgroundColor","zIndex","TextField","label","flexGrow","onKeyDown","e","key","target","value","Avatar","bgcolor","green","ml","current","AddIcon","List","map","_ref2","ListItem","disableGutters","ListItemButton","px","ListItemAvatar","Checkbox","size","pl","checked","ListItemText","primary","DeleteIcon","red","fontSize","stopPropagation","lsKey","GroceryList","localStorage","JSON","parse","setSavedList","useEffect","setItem","stringify","handleDoneCheck","val","idx","findIndex","name","tempList","_toConsumableArray","ItemLine","_ref2$item","item","FormControlLabel","control","onChange","Typography","variant","textDecoration","filter","_ref3","length","_Fragment","mb","purple","spacing","FormGroup","_ref4","_ref5","_ref6","_ref7","i","splice","Date","now","toString","concat"],"sourceRoot":""}