{"version":3,"file":"static/js/825.92a2c8e9.chunk.js","mappings":"4LAGe,SAASA,IACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtB,SAASI,IACP,IAAIC,EACJ,GACEA,EAAOC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,UAC9B,IAAhBJ,EAAKK,QAEd,MAAO,IAAML,EAAKM,aACpB,CAMA,IAAAC,GAAoCb,EAAAA,EAAAA,UAAS,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAKhC,SAASG,EAAWC,GACJ,UAAVA,EAAEC,IACJC,IACmB,eAAVF,EAAEC,IAoBf,WAGE,GAAIE,EAAKV,SAAWW,EAAU,EAAG,CAC/B,IAAIC,EAAUlB,IACdD,EAASmB,GACTC,GAAQ,SAACC,GAAC,SAAAC,QAAAC,EAAAA,EAAAA,GAASF,GAAC,CAAEF,GAAU,IAChCK,GAAW,SAACH,GAAC,OAAKA,EAAI,CAAC,GACzB,MAGErB,EAASiB,EAAKC,EAAU,IACxBM,GAAW,SAACH,GAAC,OAAKA,EAAI,CAAC,GAE3B,CAjCII,GACmB,cAAVX,EAAEC,KAoCTG,EAAU,IACZlB,EAASiB,EAAKC,EAAU,IACxBM,GAAW,SAACH,GAAC,OAAKA,EAAI,CAAC,IAnC3B,EAZAK,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACdf,EAAwD,QAA3Ce,EAACC,SAASC,cAAc,2BAAmB,IAAAF,OAAA,EAA1CA,EAA4CG,UAC5D,GAAG,KAaHJ,EAAAA,EAAAA,YAAU,WAGR,OADAK,OAAOC,iBAAiB,UAAWnB,GAC5B,WACLkB,OAAOE,oBAAoB,UAAWpB,EACxC,CAEF,GAAG,IAEH,IAAAqB,GAAwBtC,EAAAA,EAAAA,UAAS,IAAGuC,GAAArC,EAAAA,EAAAA,GAAAoC,EAAA,GAA7BjB,EAAIkB,EAAA,GAAEf,EAAOe,EAAA,GACpBC,GAA8BxC,EAAAA,EAAAA,WAAU,GAAEyC,GAAAvC,EAAAA,EAAAA,GAAAsC,EAAA,GAAnClB,EAAOmB,EAAA,GAAEb,EAAUa,EAAA,GA0B1B,SAASrB,IACP,IAAIG,EAAUlB,IACdD,EAASmB,GACTC,GAAQ,SAACC,GAAC,SAAAC,QAAAC,EAAAA,EAAAA,GAASF,GAAC,CAAEF,GAAU,IAChCK,EAAWP,EAAKV,OAClB,CAEA,OACE+B,EAAAA,EAAAA,MAAA,OACEC,UAAU,kBACVC,MAAO,CACLC,WAAY1C,EACZ2C,OAAO,gBAADpB,OAAkBX,EAAU,QAClCgC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SACEC,YAAY,mBACZC,MAAO/C,EACPgD,SAAU,SAACjC,GAAC,OAAKd,EAASc,EAAEkC,OAAOF,MAAMtC,cAAc,EACvDyC,QAAS,SAACnC,GAAC,OAAKA,EAAEkC,OAAOE,QAAQ,EACjCV,MAAO,CAAEzC,MAAOA,GAChBoD,QA7EN,WACEC,UAAUC,UAAUC,UAAUvD,EAChC,KA8EI6C,EAAAA,EAAAA,KAAA,UAAQJ,MAAO,CAAEzC,MAAAA,GAASoD,QAASnC,EAAa2B,SAAC,qBAIjDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,SAC3B1B,EAAKsC,KAAI,SAACxD,EAAOyD,GAAK,OACrBZ,EAAAA,EAAAA,KAAA,OACEO,QAAS,WACPnD,EAASiB,EAAKuC,IACdhC,EAAWgC,EACb,EACAjB,UAAWiB,IAAUtC,EAAU,mBAAqB,YACpDsB,MAAO,CAAEC,WAAY1C,IACrB,QAKZ,C","sources":["pages/colorPicker.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"../styles/color.css\";\r\n\r\nexport default function Color() {\r\n  const [color, setColor] = useState(\"white\");\r\n\r\n  function genColorCode() {\r\n    let code;\r\n    do {\r\n      code = Math.floor(Math.random() * 16777216).toString(16);\r\n    } while (code.length !== 6);\r\n\r\n    return \"#\" + code.toUpperCase();\r\n  }\r\n\r\n  function copyCode() {\r\n    navigator.clipboard.writeText(color);\r\n  }\r\n\r\n  const [contOffset, setContOffset] = useState(0);\r\n  useEffect(() => {\r\n    setContOffset(document.querySelector(\".color-container\")?.offsetTop);\r\n  }, []);\r\n\r\n  function pressToGen(e) {\r\n    if (e.key === \"Enter\") {\r\n      jumpNewColor();\r\n    } else if (e.key === \"ArrowRight\") {\r\n      nextColor();\r\n    } else if (e.key === \"ArrowLeft\") {\r\n      prevColor();\r\n    }\r\n  }\r\n\r\n  //Color History\r\n  useEffect(() => {\r\n    //Add onkeydown event listener\r\n    window.addEventListener(\"keydown\", pressToGen);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", pressToGen);\r\n    };\r\n    // eslint-disable-next-line \r\n  }, []);\r\n\r\n  const [hist, setHist] = useState([]);\r\n  const [histIdx, setHistIdx] = useState(-1);\r\n\r\n  function nextColor() {\r\n    //Check if we are at the last element of \"hist\" array\r\n    //Last element, generate new color and navigate to it\r\n    if (hist.length === histIdx + 1) {\r\n      let colCode = genColorCode();\r\n      setColor(colCode);\r\n      setHist((x) => [...x, colCode]);\r\n      setHistIdx((x) => x + 1);\r\n    }\r\n    //Just navigate to the next element in hist\r\n    else {\r\n      setColor(hist[histIdx + 1]); //set color to next element\r\n      setHistIdx((x) => x + 1); //and increent index by 1\r\n    }\r\n  }\r\n\r\n  function prevColor() {\r\n    //NOT first element, we have some previous value in hist\r\n    if (histIdx > 0) {\r\n      setColor(hist[histIdx - 1]); //set color to previous element\r\n      setHistIdx((x) => x - 1); //and decrement index by 1\r\n    }\r\n  }\r\n\r\n  function jumpNewColor() {\r\n    let colCode = genColorCode();\r\n    setColor(colCode);\r\n    setHist((x) => [...x, colCode]);\r\n    setHistIdx(hist.length);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"color-container\"\r\n      style={{\r\n        background: color,\r\n        height: `calc(100vh - ${contOffset}px)`,\r\n      }}\r\n    >\r\n      <input\r\n        placeholder=\"Enter color code\"\r\n        value={color}\r\n        onChange={(e) => setColor(e.target.value.toUpperCase())}\r\n        onFocus={(e) => e.target.select()}\r\n        style={{ color: color }}\r\n        onClick={copyCode}\r\n      />\r\n\r\n      <button style={{ color }} onClick={jumpNewColor}>\r\n        Generate Color!\r\n      </button>\r\n\r\n      <div className=\"colSquareCont\">\r\n        {hist.map((color, index) => (\r\n          <div\r\n            onClick={() => {\r\n              setColor(hist[index]);\r\n              setHistIdx(index);\r\n            }}\r\n            className={index === histIdx ? \"colSquare active\" : \"colSquare\"}\r\n            style={{ background: color }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Color","_useState","useState","_useState2","_slicedToArray","color","setColor","genColorCode","code","Math","floor","random","toString","length","toUpperCase","_useState3","_useState4","contOffset","setContOffset","pressToGen","e","key","jumpNewColor","hist","histIdx","colCode","setHist","x","concat","_toConsumableArray","setHistIdx","nextColor","useEffect","_document$querySelect","document","querySelector","offsetTop","window","addEventListener","removeEventListener","_useState5","_useState6","_useState7","_useState8","_jsxs","className","style","background","height","children","_jsx","placeholder","value","onChange","target","onFocus","select","onClick","navigator","clipboard","writeText","map","index"],"sourceRoot":""}