{"version":3,"file":"static/js/85.986663a2.chunk.js","mappings":"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","sources":["pages/groceryList/dialog.js","pages/groceryList/constant.js","pages/groceryList/index.js"],"sourcesContent":["import Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { green, red } from \"@mui/material/colors\";\r\nimport {\r\n  Checkbox,\r\n  DialogContent,\r\n  Fab,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport default function GroceryDialog({\r\n  savedList,\r\n  handleDelete,\r\n  handleAdd,\r\n  handleCheck,\r\n}) {\r\n  const inputRef = useRef();\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"secondary\"\r\n        aria-label=\"edit\"\r\n        sx={{ position: \"fixed\", bottom: 30, right: 30 }}\r\n        onClick={handleClickOpen}\r\n      >\r\n        <EditIcon />\r\n      </Fab>\r\n\r\n      <Dialog onClose={handleClose} open={open} fullWidth>\r\n        <DialogTitle component=\"div\">\r\n          <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n            Saved List\r\n          </Typography>\r\n          <ListItem disableGutters>\r\n            <Stack\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              <TextField\r\n                inputRef={inputRef}\r\n                label=\"Add Item\"\r\n                sx={{ flexGrow: 1 }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleAdd(e.target.value);\r\n                    e.target.value = \"\";\r\n                  }\r\n                }}\r\n              />\r\n              <Avatar\r\n                sx={{ bgcolor: green[100], color: green[600], ml: 1 }}\r\n                onClick={() => {\r\n                  handleAdd(inputRef.current.value);\r\n                  inputRef.current.value = \"\";\r\n                }}\r\n              >\r\n                <AddIcon />\r\n              </Avatar>\r\n            </Stack>\r\n          </ListItem>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleClose}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <List sx={{ pt: 0 }}>\r\n            {savedList.map(({ id, title, added }) => (\r\n              <ListItem disableGutters key={id}>\r\n                <ListItemButton sx={{ px: 0 }} onClick={()=>handleCheck(id)}>\r\n                  <ListItemAvatar>\r\n                    <Checkbox\r\n                      size=\"large\"\r\n                      sx={{ pl: 0 }}\r\n                      checked={added === true}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={title} />\r\n                  <DeleteIcon\r\n                    sx={{ color: red[600] }}\r\n                    fontSize=\"large\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDelete(id);\r\n                    }}\r\n                  />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","export const groceryList = [\r\n  {\r\n    id: \"0\",\r\n    title: \"Steak\",\r\n    done: false,\r\n    added: true,\r\n  },\r\n  {\r\n    id: \"1\",\r\n    title: \"Abalone\",\r\n    done: false,\r\n    added: true,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Beef brisket $25.13\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Beef tendon\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: \"White carrot radish\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    title: \"Red wine\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    title: \"Sweet potato good for eyes\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    title: \"Black beans canned\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    title: \"Broccoli (cholesterol, cancer)\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    title: \"Egg plant\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    title: \"Beets\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    title: \"Dragon fruit\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    title: \"Salmon wild caught fish\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    title: \"Avocado\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    title: \"Corn\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    title: \"Saba\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    title: \"Banana\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    title: \"Ginger\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    title: \"Cauliflower\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    title: \"Buy fish fm seatobag?\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    title: \"ABC sundry shop\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    title: \"Jif 1.95 each\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    title: \"Chocolate \",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    title: \"Turpentine\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    title: \"Blade for calluses\",\r\n    done: false,\r\n    added: false,\r\n  },\r\n];\r\n","import {\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GroceryDialog from \"./dialog\";\r\nimport { groceryList } from \"./constant\";\r\nimport { blue, green, orange, purple } from \"@mui/material/colors\";\r\n\r\nconst lsKey = \"groceryList\";\r\n\r\nexport default function GroceryList() {\r\n  const [savedList, setSavedList] = useState(() => {\r\n    if (lsKey in localStorage) {\r\n      return JSON.parse(localStorage[lsKey]);\r\n    }\r\n    return groceryList;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(lsKey, JSON.stringify(savedList));\r\n  }, [savedList]);\r\n\r\n  const handleDoneCheck = (e, val) => {\r\n    const idx = savedList.findIndex(({ id }) => id === e.target.name);\r\n    let tempList = [...savedList];\r\n\r\n    // Set the checked value\r\n    tempList[idx].done = val;\r\n\r\n    // Reorder it, but first make a copy and remove it\r\n    // const tempItem = { ...tempList[idx] };\r\n    // tempList = tempList.filter(({ id }) => id !== tempItem.id);\r\n\r\n    // // if checked, move it to the bottom of the list\r\n    // if (val === true) {\r\n    //   tempList = [...tempList, tempItem];\r\n    // }\r\n\r\n    // // If unchecked move it to the top of the list\r\n    // else {\r\n    //   tempList = [tempItem, ...tempList];\r\n    // }\r\n\r\n    // Save it\r\n    setSavedList(tempList);\r\n  };\r\n\r\n  const handleAddedCheck = (id) => {\r\n    const idx = savedList.findIndex((i) => i.id === id);\r\n    let tempList = [...savedList];\r\n\r\n    // Invert the checked value\r\n    tempList[idx].added = !tempList[idx].added;\r\n\r\n    // Save it\r\n    setSavedList(tempList);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const idx = savedList.findIndex((i) => i.id === id);\r\n    let tempList = [...savedList];\r\n    tempList.splice(idx, 1);\r\n\r\n    // Save it\r\n    setSavedList(tempList);\r\n  };\r\n\r\n  const handleAdd = (title) => {\r\n    // Prepend to start\r\n    setSavedList([\r\n      { id: Date.now().toString(), title, done: false, added: false },\r\n      ...savedList,\r\n    ]);\r\n  };\r\n\r\n  const ItemLine = ({ item: { id, title, done } }) => {\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            name={id}\r\n            size=\"large\"\r\n            checked={done}\r\n            onChange={handleDoneCheck}\r\n          />\r\n        }\r\n        label={\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={done ? { textDecoration: \"line-through\" } : {}}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ pt: 5 }}>\r\n      {savedList.filter(({ added, done }) => added === true && done !== true)\r\n        .length > 0 && (\r\n        <>\r\n          <Typography variant=\"h3\" sx={{ mb: 3, color: purple[700] }}>\r\n            Grocery List\r\n          </Typography>\r\n          <Stack direction=\"column\" spacing={2} sx={{ mb: 4 }}>\r\n            <FormGroup>\r\n              {savedList\r\n                .filter(({ added, done }) => added === true && done !== true)\r\n                .map((item) => (\r\n                  <ItemLine item={item} key={item.id} />\r\n                ))}\r\n            </FormGroup>\r\n          </Stack>\r\n        </>\r\n      )}\r\n\r\n      {savedList.filter(({ added, done }) => added === true && done === true)\r\n        .length > 0 && (\r\n        <>\r\n          <Typography variant=\"h3\" sx={{ mb: 3, color: green[600] }}>\r\n            {savedList.filter(\r\n              ({ added, done }) => added === true && done !== true\r\n            ).length > 0\r\n              ? \"Done\"\r\n              : \"Time to Checkout!\"}\r\n          </Typography>\r\n          <Stack direction=\"column\" spacing={2}>\r\n            <FormGroup>\r\n              {savedList\r\n                .filter(({ added, done }) => added === true && done === true)\r\n                .map((item) => (\r\n                  <ItemLine item={item} key={item.id} />\r\n                ))}\r\n            </FormGroup>\r\n          </Stack>\r\n        </>\r\n      )}\r\n\r\n      <GroceryDialog\r\n        savedList={savedList}\r\n        handleDelete={handleDelete}\r\n        handleAdd={handleAdd}\r\n        handleCheck={handleAddedCheck}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["GroceryDialog","_ref","savedList","handleDelete","handleAdd","handleCheck","inputRef","useRef","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","_jsxs","children","_jsx","Fab","color","sx","position","bottom","right","onClick","EditIcon","Dialog","onClose","fullWidth","DialogTitle","component","Typography","variant","mb","ListItem","disableGutters","Stack","direction","alignItems","justifyContent","width","TextField","label","flexGrow","onKeyDown","e","key","target","value","Avatar","bgcolor","green","ml","current","AddIcon","IconButton","top","theme","palette","grey","CloseIcon","DialogContent","dividers","List","pt","map","_ref2","id","title","added","ListItemButton","px","ListItemAvatar","Checkbox","size","pl","checked","ListItemText","primary","DeleteIcon","red","fontSize","stopPropagation","groceryList","done","lsKey","GroceryList","localStorage","JSON","parse","setSavedList","useEffect","setItem","stringify","handleDoneCheck","val","idx","findIndex","name","tempList","_toConsumableArray","ItemLine","_ref2$item","item","FormControlLabel","control","onChange","textDecoration","Container","maxWidth","filter","_ref3","length","_Fragment","purple","spacing","FormGroup","_ref4","_ref5","_ref6","_ref7","i","splice","Date","now","toString","concat"],"sourceRoot":""}