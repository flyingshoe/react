{"version":3,"sources":["pages/todo.js"],"names":["TodoInput","props","id","autoComplete","type","placeholder","onKeyDown","addTodo","TodoList","renderedList","todoList","map","todo","index","Todo","todoItem","key","toggleTodos","removeTodo","className","onClick","checked","done","onChange","TodoApp","useState","JSON","parse","localStorage","todos","setTodos","useEffect","stringify","e","newTodos","slice","push","target","value","splice"],"mappings":"wKAuCA,SAASA,EAAUC,GACjB,OACE,oCACE,yBAAKC,GAAG,yBACR,2BACEC,aAAa,MACbD,GAAG,aACHE,KAAK,OACLC,YAAY,aACZC,UAAWL,EAAMM,WAKzB,SAASC,EAASP,GAChB,IAAMQ,EAAeR,EAAMS,SAASC,KAAI,SAACC,EAAMC,GAAP,OACtC,kBAACC,EAAD,CACEC,SAAUH,EACVI,IAAKH,EACLX,GAAIW,EACJI,YAAahB,EAAMgB,YACnBC,WAAYjB,EAAMiB,gBAGtB,OAAO,6BAAShB,GAAG,aAAaO,GAElC,SAASK,EAAKb,GACZ,OACE,6BAASkB,UAAU,aACjB,4BAAQA,UAAU,QAAQC,QAAS,kBAAMnB,EAAMiB,WAAWjB,EAAMC,MAAhE,QAGA,+BACE,2BACEE,KAAK,WACLiB,QAASpB,EAAMc,SAASO,KACxBC,SAAU,kBAAMtB,EAAMgB,YAAYhB,EAAMC,OAE1C,0BAAMiB,UAAU,OAChB,0BAAMA,UAAU,QAAQlB,EAAMc,SAASH,QAMhCY,UAjFf,WACE,MAA6BC,mBAASC,KAAKC,MAAMC,aAAaC,OAAS,OAAvE,mBAAOnB,EAAP,KAAiBoB,EAAjB,KAuBA,OAtBAC,qBAAU,WACRH,aAAaC,MAAQH,KAAKM,UAAUtB,KACnC,CAACA,IAqBF,yBAAKS,UAAU,kBACb,wBAAIjB,GAAG,aAAP,cACA,kBAACF,EAAD,CAAWO,QAjBf,SAAiB0B,GACf,GAAc,UAAVA,EAAEjB,IAAiB,CACrB,IAAMkB,EAAWxB,EAASyB,QAC1BD,EAASE,KAAK,CAAExB,KAAMqB,EAAEI,OAAOC,MAAOhB,MAAM,IAC5CQ,EAASI,GACTD,EAAEI,OAAOC,MAAQ,OAajB,kBAAC9B,EAAD,CACEE,SAAUA,EACVO,YAzBN,SAAqBJ,GACnB,IAAMqB,EAAWxB,EAASyB,QAC1BD,EAASrB,GAAOS,MAAQY,EAASrB,GAAOS,KACxCQ,EAASI,IAuBLhB,WAbN,SAAoBL,GAClB,IAAMqB,EAAWxB,EAASyB,QAC1BD,EAASK,OAAO1B,EAAO,GACvBiB,EAASI","file":"static/js/7.ba815482.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/todo.css\";\r\n\r\nfunction TodoApp() {\r\n  const [todoList, setTodos] = useState(JSON.parse(localStorage.todos || \"[]\"));\r\n  useEffect(() => {\r\n    localStorage.todos = JSON.stringify(todoList);\r\n  }, [todoList]);\r\n  function toggleTodos(index) {\r\n    const newTodos = todoList.slice();\r\n    newTodos[index].done = !newTodos[index].done;\r\n    setTodos(newTodos);\r\n  }\r\n  function addTodo(e) {\r\n    if (e.key === \"Enter\") {\r\n      const newTodos = todoList.slice();\r\n      newTodos.push({ todo: e.target.value, done: false });\r\n      setTodos(newTodos);\r\n      e.target.value = \"\";\r\n    }\r\n  }\r\n  function removeTodo(index) {\r\n    const newTodos = todoList.slice();\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <h1 id='todoTitle'>To Do List</h1>\r\n      <TodoInput addTodo={addTodo} />\r\n      <TodoList\r\n        todoList={todoList}\r\n        toggleTodos={toggleTodos}\r\n        removeTodo={removeTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nfunction TodoInput(props) {\r\n  return (\r\n    <>\r\n      <div id=\"todo-input-underline\"></div>\r\n      <input\r\n        autoComplete=\"off\"\r\n        id=\"todo-input\"\r\n        type=\"text\"\r\n        placeholder=\"Add To-Do!\"\r\n        onKeyDown={props.addTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\nfunction TodoList(props) {\r\n  const renderedList = props.todoList.map((todo, index) => (\r\n    <Todo\r\n      todoItem={todo}\r\n      key={index}\r\n      id={index}\r\n      toggleTodos={props.toggleTodos}\r\n      removeTodo={props.removeTodo}\r\n    />\r\n  ));\r\n  return <section id=\"todo-list\">{renderedList}</section>;\r\n}\r\nfunction Todo(props) {\r\n  return (\r\n    <section className=\"todo-item\">\r\n      <button className=\"close\" onClick={() => props.removeTodo(props.id)}>\r\n        Ã—\r\n      </button>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={props.todoItem.done}\r\n          onChange={() => props.toggleTodos(props.id)}\r\n        />\r\n        <span className=\"cb\"></span>\r\n        <span className=\"todo\">{props.todoItem.todo}</span>\r\n      </label>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"sourceRoot":""}